--[[
[+] - New Version 1.2.0!
[-] - Deleted patched scripts.
[+] - New UI
[+] - Key System
[+] - New intro (How in V.G Hub)
[+] - Added supported executors tab
[Info] - Credits: Kurus and ibosiktt(morgen) - loadstring(game:HttpGet('https://raw.githubusercontent.com/morgenXD/AzureFlareHub/main/AzureFlareHub'))()
[Info]- Dev Russian
[Info] - Discord: Soon
[Info] - Guilded: https://www.guilded.gg/i/E0LGNBqE

╔═══╗╔══╗────╔══╗─╔══╗╔╗╔╗╔═══╗╔══╗╔══╗╔══╗╔╗
╚══╗║║╔╗║────║╔╗║─║╔╗║║║║║║╔══╝║╔╗║║╔═╝║╔═╝║║
─╔═╝║║╚╝║────║║║║─║║║║║╚╝║║╚══╗║╚╝║║║──║║──║║
─╚═╗║║╔╗║────║║║║─║║║║║╔╗║║╔═╗║║╔╗║║║──║║──╚╝
╔══╝║║║║║───╔╝╚╝╚╗║╚╝║║║║║║╚═╝║║║║║║╚═╗║╚═╗╔╗
╚═══╝╚╝╚╝───╚════╝╚══╝╚╝╚╝╚═══╝╚╝╚╝╚══╝╚══╝╚╝
          \_Welcome to Kurus-Ware! This script supported 40+ games.

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v30=nil;function v30(v31,v32,v33)local v39=v31[1];local v40=v31[2];local v41=v31[3];return function(...)local v64=1;local v65= -1;local v66={...};local v67=v12("#",...) -1;local function v68()local v75=v39;local v76=Const;local v77=v40;local v78=v41;local v79=v28;local v80={};local v81={};local v82={};for v89=0 -0,v67 do if (((3916 -(70 + 954))==2892) and (v89>=v78)) then v80[v89-v78]=v66[v89 + (1376 -(268 + 1107))];else v82[v89]=v66[v89 + 1 + 0];end end local v83=(v67-v78) + (3 -2) + 0;local v84;local v85;while true do local v90=0 -0;local v91;local v92;while true do if (((1084 -(372 + 712))==v90) or (3163<=2702)) then v91=0 -0;v92=nil;v90=1;end if ((v90==((6 -4) -1)) or ((665 -(12 + 21 + (97 -46)))>(3354 -(183 + 554 + 1190)))) then while true do if ((v91==(0 + 0)) or (4044<=2373)) then v92=1481 -(1365 + 116);while true do if ((v92==1) or ((665 + 280)>(524 + 2130))) then if ((v85<=(10 + 3)) or ((335 + 893)<((1101 -728) + 70))) then if (((3999 -(61 + 41))==(3017 + 880)) and (v85<=6)) then if ((4389>=(819 + 18)) and (v85<=(50 -(17 + 31)))) then if ((v85<=((332 -(13 + 319)) -0)) or ((4350 -(239 + 880))>3283)) then v82[v84[5 -3]]=v33[v84[2 + 1]];elseif ((v85==1) or ((4077 -(3762 -2706))<(1597 -1160))) then v82[v84[2]]=v82[v84[9 -6]] + v84[4 + 0];else v82[v84[2]]=v32[v84[3]];end elseif (((8930 -(12461 -7727))>=971) and (v85<=(443 -((543 -343) + 239)))) then if ((v85==(1192 -((2511 -1370) + 48))) or ((5196 -(257 + 31 + (2552 -1752)))<=(4487 -1695))) then local v124=972 -(189 + 783);local v125;local v126;while true do if ((0==v124) or ((1488 -(172 + 65))>=1432)) then local v179=0;while true do if ((v179==0) or ((5832 -(242 + 133 + 1540))<=(6547 -4334))) then v125=(0 -0) -0;v126=nil;v179=518 -(29 + 488);end if (((2311 -(70 + 768))==(1916 -((1809 -1431) + 65))) and (v179==(1481 -(1456 + 24)))) then v124=1 + 0;break;end end end if (((436 + 51)<(2632 -(328 + 117))) and (v124==(1 + 0))) then while true do if (((747 + 849)<=4518) and (v125==0)) then v126=v84[2];v82[v126]=v82[v126](v13(v82,v126 + (2 -1),v65));break;end end break;end end else local v127=0 -0;local v128;local v129;local v130;local v131;local v132;local v133;while true do if (((2169 + 244)<=(2219 + 2055)) and (v127==(127 -(53 + 71)))) then while true do if (((1524 -(984 + 540))==v128) or ((6678 -2104)==(10553 -7832))) then local v187=79 -(7 + 72);while true do if ((v187==(0 -0)) or ((4901 -(68 + 134))<((1111 + 714) -(44 + 834 + 830)))) then v129=0 + 0;v130=nil;v187=1 + 0;end if ((v187==(1 + 0)) or (2901<((2188 -1257) + 144))) then v128=(2 -1) -(1315 -(51 + 1264));break;end end end if ((((5741 -3735) -675)<(5742 -(709 + 158))) and (v128==(1 -0))) then local v188=(256 + 1019) -(875 + 400);while true do if ((v188==(1173 -(404 + 769))) or ((8947 -6588)<=1758)) then v131=nil;v132=nil;v188=1;end if (((3427 -2513)<4961) and (v188==(1 -0))) then v128=(1362 + 482) -(172 + 1670);break;end end end if ((v128==(1643 -(991 + 650))) or (995>((14179 -10881) -(656 + 881)))) then v133=nil;while true do if (((298 + 206)<=(406 + 180)) and (v129==(1 + 0 + 0))) then local v212=1481 -(950 + 531);while true do if ((v212==(489 -(54 + 434))) or ((2009 -(172 + 63))<((3496 -(846 + 548)) -(1129 + 697)))) then v129=2 + (0 -0);break;end if ((844>90) and (v212==(0 -0))) then local v225=0 -0;while true do if (((7826 -2981)>=4640) and (v225==0)) then v65=(v132 + v130) -1;v133=0 -0;v225=(1556 -(162 + 1393)) + 0;end if (((656 -(327 + 328))==v225) or (((253 -53) + 1949)>=(468 + 4292))) then v212=71 -(24 + (96 -50));break;end end end end end if ((v129==(1 + 1 + (989 -(869 + 120)))) or (((6898 -(44 + 1161)) -((3056 -2332) + 340 + 57))<=(4508 -3348))) then for v218=v130,v65 do local v219=1610 -(1553 + (183 -126));local v220;while true do if (((1960 -(109 + 626))>=(1456 -(1091 + 338))) and ((914 -(167 + 747))==v219)) then v220=0 -0;while true do if ((v220==0) or ((5858 -4603)>=1790)) then v133=v133 + 1 + 0;v82[v218]=v131[v133];break;end end break;end end end break;end if ((v129==0) or ((254 + 3441)<(1395 -796))) then local v213=0;while true do if (((1166 -(434 + 16))<=(6827 -2664)) and (v213==1)) then v129=1 -0;break;end if ((v213==(1219 -(1046 + 173))) or (((1122 + 9783) -7164)<(7699 -4362))) then v130=v84[2];v131,v132=v79(v82[v130](v13(v82,v130 + (945 -(653 + 291)),v84[(1701 + 101) -(1171 + 628)])));v213=946 -(565 + 380);end end end end break;end end break;end if (((7435 -3314)>(191 + 2289)) and (v127==0)) then v128=0 + 0;v129=nil;v127=(5 -1) -3;end if ((4024>=(1134 + 126)) and (v127==(4 -2))) then v132=nil;v133=nil;v127=2 + 1 + 0;end if ((v127==(1 -0)) or ((11883 -(32874 -23370))==(11109 -(8005 -(185 + 418))))) then v130=nil;v131=nil;v127=7 -5;end end end elseif ((v85==(857 -(122 + 730))) or ((2722 -(811 + 714))==(6891 -(1370 + 594)))) then if (((1034 + 117)<(4942 -(745 + 206))) and (v82[v84[3 -1]]==v84[4])) then v64=v64 + (227 -(106 + 120));else v64=v84[530 -(227 + 300)];end else local v134=0 + 0;local v135;local v136;while true do if ((v134==(1625 -((174 -95) + 1546))) or ((30 + 81)>(2265 -727))) then v135=0;v136=nil;v134=1 + 0;end if ((v134==1) or ((569 + (2598 -691))<=(2882 -(996 + 23)))) then while true do if ((v135==(0 -0)) or ((5424 -(273 + 216))<(4026 -(420 + 114)))) then v136=v84[2];v82[v136](v82[v136 + 1]);break;end end break;end end end elseif ((v85<=(373 -(171 + 72 + (640 -(457 + 62))))) or ((7369 -(16925 -13506))<=(17100 -(38433 -24877)))) then if (((3769 + 777)>=(201 + 2181)) and (v85<=(610 -(461 + 142)))) then v82[v84[5 -3]]();elseif ((v85>(7 + 1 + 0)) or (1029==(30 + 303))) then local v137=0 -0;local v138;local v139;local v140;while true do if ((v137==(1 -0)) or ((6947 -5173)<(1190 -(348 + 389)))) then v140=nil;while true do if ((3027>(1884 -(463 + 1391))) and (v138==(2 -1))) then while true do if (((1179 -(320 + 32))>(35 + 185)) and (v139==((0 + 0) -0))) then v140=v84[2];v82[v140]=v82[v140](v82[v140 + 1 + 0]);break;end end break;end if (((3547 -(1118 + (479 -(5 + 20))))<(347 + 1956)) and (v138==0)) then v139=0;v140=nil;v138=1;end end break;end if ((v137==0) or ((2427 -(474 + 613))>(4494 -(820 + 70)))) then v138=0 -0;v139=nil;v137=303 -(221 + 81);end end else v82[v84[2 -0]]=v82[v84[(3 -0) + (0 -0)]];end elseif ((v85<=(6 + 5)) or ((1079 + 359)<=(355 -(138 + 14)))) then if ((v85>10) or ((392 + 1438)==1631)) then local v142=949 -(643 + 306);local v143;local v144;local v145;while true do if ((4636>178) and (v142==(7 -5))) then if (((1096 + 656)==((54 + 2970) -(588 + 684))) and (v144>(0 -0))) then if ((v145<=v82[v143 + 1 + 0]) or ((13131 -10467)<1000)) then local v205=0;while true do if ((v205==(757 -(699 + 58))) or ((1630 -((1256 -688) + 364))<=(208 + 147))) then v64=v84[1 + 2];v82[v143 + 3]=v145;break;end end end elseif ((v145>=v82[v143 + (1 -0)]) or ((1372 + 738 + 2286)<(1699 -(243 + 1356)))) then local v206=0 -0;local v207;while true do if (((1256 + 1024)<(3755 + 1029)) and (v206==0)) then v207=0 -(0 -0);while true do if (((1105 + 3639)>(2092 + 338)) and (v207==(1312 -(1043 + 269)))) then v64=v84[3];v82[v143 + ((2975 -(1276 + 88)) -(1250 + 358))]=v145;break;end end break;end end end break;end if ((v142==1) or ((4517 -(5 + 68 + 318))==2438)) then local v180=0;while true do if (((6456 -(13596 -9409))==2269) and (v180==(1643 -(363 + 1280)))) then v145=v82[v143] + v144;v82[v143]=v145;v180=1170 -(693 + 476);end if ((v180==(3 -2)) or (2978<=(214 -124))) then v142=4 -2;break;end end end if ((((3295 -2065) -(15 + 216))==999) and (v142==(249 -(247 + 2)))) then local v181=0;while true do if ((v181==1) or ((4484 -(65 + 204))<=(3941 -796))) then v142=(3 + 1) -3;break;end if ((v181==(0 -(832 -(138 + 694)))) or (921==1240)) then v143=v84[2 + 0];v144=v82[v143 + (1253 -(16 + 1235))];v181=1;end end end end elseif ((517==(660 -(106 + 37))) and (v84[787 -(383 + 402)]==v82[v84[3 + 1]])) then v64=v64 + (1794 -((1650 -908) + 1051));else v64=v84[8 -5];end elseif (((335 + 390)<=(5490 -(798 + 224))) and (v85==(1955 -(244 + 1699)))) then local v146=(5742 -4302) -(1177 + 263);local v147;local v148;while true do if ((1073==(2210 -(6 + 1131))) and (v146==(1542 -(950 + (2099 -1508))))) then v82[v147 + 1 + 0]=v148;v82[v147]=v148[v84[8 -4]];break;end if ((v146==0) or ((5795 -(409 + 529))<(2040 -(495 + 9)))) then v147=v84[2 + (0 -0)];v148=v82[v84[3 + 0]];v146=1;end end else v82[v84[1 + 1]]={};end elseif (((1188 -((16 -11) + 5))==(261 + 917)) and (v85<=20)) then if (((14619 -10469)>(4306 -(450 + (2786 -(222 + 1205))))) and (v85<=((871 -(451 + 404)) + 0))) then if ((v85<=14) or (521>=(134 + 3478))) then v82[v84[537 -(40 + 495)]][v84[11 -8]]=v82[v84[4]];elseif ((v85>(1825 -((3149 -2091) + 752))) or ((4537 -(156 + 959))<(13 + 807))) then local v150=0 -0;local v151;local v152;local v153;while true do if (((0 + 0)==v150) or ((1299 + 2456)>(382 + 3943))) then v151=0 + 0;v152=nil;v150=1;end if ((v150==(1 + 0)) or (1518==(779 + 56))) then v153=nil;while true do if ((v151==(0 + 0)) or (4330<(914 -598))) then local v190=1041 -((561 -295) + 775);while true do if (((1314 + 2535)>=(2303 -(299 + 614))) and (v190==(1 + 0))) then v151=1 + 0;break;end if (((481 -(238 + 243))==v190) or ((2170 -1084)==4790)) then v152=0 + 0;v153=nil;v190=1 + 0;end end end if (((3827 -(41 + 41))>(1591 -((904 -(736 + 144)) + 51 + 35))) and (v151==1)) then while true do if ((v152==(0 -0)) or ((2003 -(290 + 502))>=3652)) then v153=v84[79 -(19 + 58)];v82[v153]=v82[v153](v13(v82,v153 + 1 + 0,v84[3 -0]));break;end end break;end end break;end end else local v154=0 + 0;local v155;local v156;while true do if ((v154==0) or ((2896 -(2 + 32 + 241 + 633))>=(12613 -8701))) then v155=0 + 0;v156=nil;v154=1;end if ((3172>((1043 -(482 + 244)) + 2320)) and (v154==(1 + 0))) then while true do if (((6112 -(1413 + 453))>=1655) and (v155==0)) then v156=v84[2];v82[v156]=v82[v156]();break;end end break;end end end elseif (((5004 -1103)<=(18850 -14834)) and (v85<=(76 -58))) then if (((1612 + 555)<=2435) and (v85==17)) then local v157=0 + 0 + 0;local v158;local v159;local v160;while true do if ((v157==(1 + 0)) or (((1787 + 14680) -11545)<=(3730 -((1271 -699) + 70)))) then v160=nil;while true do if (((3216 -(14 + 14))>=(2946 -1641)) and ((2 -1)==v158)) then while true do if ((v159==(0 -0)) or ((9932 -6144)<=2209)) then v160=v84[(3810 -(1973 + 13)) -(949 + 873)];v82[v160](v13(v82,v160 + 1 + 0,v84[3]));break;end end break;end if (((1394 -((380 -70) + (1147 -(85 + 93))))==115) and (v158==0)) then local v192=0 + 0;while true do if (((0 + 0)==v192) or ((1197 -(585 + (1380 -(812 + 476))))>616)) then v159=0;v160=nil;v192=1 + 0;end if ((v192==1) or ((2045 + 2423)<=((1091 + 838) -(789 + 659)))) then v158=265 -(15 + 249);break;end end end end break;end if ((v157==(316 -(227 + 89))) or ((1940 -1282)>=(1329 + 1601))) then v158=0;v159=nil;v157=1 + 0;end end else local v161=878 -(411 + 467);local v162;local v163;local v164;local v165;while true do if (((6138 -4186)>(3813 -2243)) and (v161==1)) then v164=nil;v165=nil;v161=2 -0;end if (((7544 -2687)>((17003 -11936) -(61 + 960))) and (v161==(7 -5))) then while true do if ((v162==(3 -1)) or ((2092 + 4)>=(6893 -2774))) then for v208=1 + 0 + 0,v84[1 + 0 + 3] do local v209=0 -0;local v210;local v211;while true do if ((228<(261 + 1166)) and (v209==((3730 -2505) -(1151 + 74)))) then local v222=0;while true do if ((2774>(453 + 466)) and ((1 + (575 -(151 + 424)))==v222)) then v209=2 -1;break;end if ((v222==(1991 -(1738 + 253))) or ((819 + 2924)>(5556 -(203 + 1591)))) then v210=110 -(73 + 37);v211=nil;v222=1 + 0;end end end if (((6220 -3543)==(3873 -(271 + 925))) and (1==v209)) then while true do if ((v210==(3 -2)) or ((2079 -(162 + 1018))>=3481)) then if ((v211[733 -(320 + 412)]==(31 -23)) or (2237<=(415 + 938))) then v165[v208-(1 + 0)]={v82,v211[11 -8]};else v165[v208-(1413 -(1296 + 116))]={v32,v211[7 -4]};end v81[ #v81 + 1]=v165;break;end if (((7706 -3639)>2949) and ((0 -(1699 -(1482 + 217)))==v210)) then local v232=0;local v233;while true do if (((785 + 2050)<=((11282 -(200 + 1487)) -(6781 -(111 + 191)))) and (v232==(1164 -(337 + 827)))) then v233=0;while true do if (((1135 + 1383)<(4248 -(130 + 186))) and (v233==0)) then local v257=0 + 0;while true do if ((v257==1) or ((382 + 2023)<(504 -(61 + (1575 -(432 + 1126)))))) then v233=835 -(188 + 646);break;end if (((1702 + 757)<=(9162 -6202)) and (v257==(0 + 0))) then v64=v64 + 1;v211=v75[v64];v257=1 + 0;end end end if ((v233==(2 -1)) or (1582>=(3883 -(477 + 225)))) then v210=1 + 0;break;end end break;end end end end break;end end end v82[v84[379 -(21 + 356)]]=v30(v163,v164,v33);break;end if ((0==v162) or ((6240 -1911)<(3493 -2322))) then local v194=0;while true do if (((240 + 88)<=(5202 -3786)) and (v194==(859 -(14 + 586 + 258)))) then v162=1436 -(1217 + 218);break;end if ((91<(8209 -5981)) and (v194==(0 -0))) then local v216=1581 -(807 + 774);while true do if (((1540 -(232 + 113))>(172 + 862)) and (v216==(1 -0))) then v194=1 + (0 -0);break;end if (((7946 -5379)<(5171 -(133 + 164))) and (v216==(0 + 0))) then v163=v77[v84[3 + 0]];v164=nil;v216=1;end end end end end if ((1469>((2527 -(53 + 41)) -(141 + 1588))) and (v162==1)) then local v195=0 + 0;local v196;while true do if ((v195==(1440 -(391 + 1049))) or ((3383 -(657 + 27))<=1213)) then v196=353 -(257 + 96);while true do if (((21244 -16262)>=(393 + 1432)) and (v196==(1 + 0))) then v162=1460 -(90 + 1368);break;end if (((10803 -6355)>=(3213 -(17 + 6))) and (v196==(0 + 0))) then local v226=0 -0;while true do if (((3338 -1759)<=(3713 + 1238)) and (v226==(0 -0))) then v165={};v164=v10({},{__index=function(v244,v245)local v249=0 -0;local v250;local v251;while true do if ((3369<=(4719 -(285 + 440))) and (v249==(1 + 0))) then while true do if (((2635 -(435 + 970 + 109))==1121) and (v250==(0 -0))) then local v262=0 + 0;local v263;while true do if (((4351 -(713 + 354))==((1663 -624) + (3980 -1735))) and (v262==(683 -(38 + 645)))) then v263=578 -(151 + (583 -156));while true do if (((1466 -(982 + 460))==((45 + 47) -68)) and (v263==(1529 -(1436 + (142 -49))))) then local v270=0 -0;while true do if ((v270==(0 -0)) or (2304==697)) then v251=v165[v245];return v251[1][v251[1831 -(1105 + 724)]];end end end end break;end end end end break;end if (((1468 + 3366)>=(6705 -4693)) and (v249==((0 -0) + 0))) then local v258=0;while true do if ((((601 -(215 + 102)) + 4506)>=(4037 -(286 + 507))) and (v258==(3 -2))) then v249=1 + 0;break;end if ((v258==0) or (2231>=(2503 + 794))) then v250=0 -0;v251=nil;v258=530 -(497 + 32);end end end end end,__newindex=function(v246,v247,v248)local v252=0 + 0;local v253;local v254;local v255;while true do if (((6364 -2703)==((8894 -3838) -(356 + 820 + 219))) and (v252==(464 -(299 + 165)))) then v253=0 + 0 + 0;v254=nil;v252=621 -(382 + 238);end if ((3977>=(3424 -(971 + 67))) and ((1864 -(1164 + 699))==v252)) then v255=nil;while true do if ((v253==(0 -0)) or ((4481 -(645 + 846))<=235)) then local v264=0 + 0;while true do if (((4799 -(742 + 1124))>=(3560 -(664 + 269))) and (v264==(3 -2))) then v253=1;break;end if (((2168 -(1036 + 679))<=(3939 -((22 -11) + 3))) and (v264==(356 -(128 + 228)))) then v254=0 -0;v255=nil;v264=1 + 0;end end end if (((1302 + 3332)>=2518) and (1==v253)) then while true do if ((v254==(0 -0)) or (((9781 + 9858) -14650)<1020)) then v255=v165[v247];v255[1][v255[2]]=v248;break;end end break;end end break;end end end});v226=(1 + 0) -0;end if ((v226==(1722 -(450 + 1271))) or (1168>((5035 -(871 + 68)) -(375 + 45 + 370)))) then v196=1;break;end end end end break;end end end end break;end if ((4331<=4587) and ((0 + 0)==v161)) then v162=0;v163=nil;v161=1 + 0;end end end elseif ((v85>((398 -(156 + 42)) -(101 + 80))) or ((2838 -(33 + 454))==(2396 + 2082))) then v64=v84[1 + 2];else v82[v84[2 + 0]]=v30(v77[v84[11 -8]],nil,v33);end elseif ((v85<=(1416 -(499 + 893))) or (2499==(2697 + 1304))) then if (((12405 -8656)<4263) and (v85<=(75 -53))) then if ((v85>(2014 -(247 + (3122 -1376)))) or (((5029 -(30 + 9)) -(299 + (564 -317)))==(6588 -4478))) then v82[v84[1115 -(602 + 511)]][v84[2 + 1]]=v84[3 + 1];else v82[v84[5 -3]]=v82[v84[(1567 + 422) -(976 + 1010)]][v84[1195 -((2253 -(725 + 739)) + 402)]];end elseif (((840 + (2093 -(526 + 916)))>(1675 -(27 + 426))) and (v85==(22 + 1))) then local v169=0 + 0;local v170;local v171;local v172;local v173;while true do if ((v169==0) or (4089>(1885 + 2706))) then local v184=266 -(69 + (279 -(63 + 19)));while true do if ((v184==(1102 -(784 + 318))) or (4509==3580)) then v170=0 + 0;v171=nil;v184=1 + 0;end if ((((170 -(25 + 144)) -0)==v184) or ((2449 + 1381)==(1094 + 888))) then v169=1 -0;break;end end end if ((v169==((3961 -(1144 + 836)) -(564 + 161 + 1255))) or ((5617 -(838 + 284))<(474 + 117 + 1957))) then local v185=1125 -(802 + 323);while true do if ((v185==((0 + 0) -0)) or ((3333 -(502 + 1034))<1311)) then v172=nil;v173=nil;v185=1138 -((1246 -(315 + 514)) + (1451 -731));end if ((4454>=(551 -253)) and (v185==1)) then v169=1906 -(1800 + 104);break;end end end if ((v169==2) or ((930 -(485 + 77))>=(4671 + 200))) then while true do if ((v170==0) or (1943<(1817 -(120 + 1408)))) then local v197=0 -0;local v198;while true do if ((v197==(0 -0)) or ((1773 -((2051 -(849 + 984)) + 183))>=(993 + 2114))) then v198=(0 -0) -0;while true do if ((0==v198) or ((209 + 3808)<((4384 -(25 + 512)) -(809 + 1098)))) then local v227=0 + 0;while true do if ((v227==(2 -1)) or ((13657 -10842)==(9475 -6019))) then v198=1;break;end if ((v227==(1885 -(528 + 1357))) or ((3437 -1893)>=(4451 -(567 + 344)))) then v171=v84[2];v172=v82[v171];v227=1;end end end if (((1688 + 2983)>3911) and (v198==((1 + 0) -0))) then v170=1 + 0;break;end end break;end end end if ((v170==(1621 -(544 + 128 + 948))) or (3378==(5154 -((1999 -1054) + 91)))) then v173=v82[v171 + 2];if (((543 + 1168)==(3030 -1319)) and (v173>(0 -0))) then if ((v172>v82[v171 + (979 -(46 + 932))]) or ((468 + 1048)<=(2014 -(850 + 267)))) then v64=v84[3];else v82[v171 + (1176 -(981 + 192))]=v172;end elseif (((4273 -(364 + 12))>(1027 -(435 + 480))) and (v172<v82[v171 + 1 + 0])) then v64=v84[43 -(7 + 33)];else v82[v171 + (6 -3)]=v172;end break;end end break;end end else v82[v84[1661 -((1639 -(994 + 635)) + 1649)]]=v84[3] -v82[v84[1851 -(863 + 984)]];end elseif ((v85<=((1499 -(904 + 527)) -42)) or ((6074 -(976 + 986))<=(2743 -1676))) then if ((v85==(110 -85)) or (363==(543 + 2582))) then for v177=v84[864 -(331 + (1473 -942))],v84[7 -4] do v82[v177]=nil;end else v82[v84[1583 -(826 + 755)]]=v82[v84[1784 -(91 + 1690)]] -v84[1572 -(832 + 736)];end elseif (((8997 -7191)<=(3223 -(358 + 489 + 399))) and (v85>(13 + 14))) then do return;end else v82[v84[4 -2]]=v84[1751 -(810 + (1215 -277))];end v64=v64 + 1;break;end if (((4543 -(1234 + 78))<=(3833 -(153 + 116))) and (v92==(702 -(568 + 134)))) then local v105=0 + 0;local v106;while true do if (((0 -0)==v105) or (((5425 -(303 + 818)) -(149 + 628))<=(1224 + 906))) then v106=0 -0;while true do if (((1615 -(1258 + 356))==v106) or ((56 -28)>=(5108 -(15 + 12 + 342)))) then v92=2 -1;break;end if (((1327 -756)<=(5640 -(3591 -(94 + 1261)))) and (v106==(44 -(27 + (1361 -(293 + 1051)))))) then local v119=0 + 0;while true do if (((5431 -2345)==(968 + 2118)) and (1==v119)) then v106=1 -0;break;end if (((9554 -5129)==(6167 -(669 + 1073))) and (v119==(0 -0))) then v84=v75[v64];v85=v84[1 + 0];v119=(1 + 0) -0;end end end end break;end end end end break;end end break;end end end end A,B=v28(v11(v68));if  not A[1] then local v86=0;local v87;while true do if (0==v86) then v87=v31[4][v64] or "?";error("Script error at ["   .. v87   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v30(v29(),{},v17)();end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v42=0 -0;local v43;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v42==(1421 -(132 + 1289))) then v43=0;v44=nil;v42=1 + 0;end if (v42~=1) then else v45=nil;v46=nil;v42=1192 -(377 + 813);end if (v42==3) then v49=nil;while true do local v88=0;while true do if (v88==1) then if (v43~=(4 -2)) then else local v97=0 + 0;while true do local v99=0;while true do if (v99==(1387 -(388 + 999))) then if (v97==(0 + 0)) then for v108=2 -1,v24() do local v109=161 -(12 + 149);local v110;local v111;local v112;local v113;while true do if (v109==(1973 -(1631 + 342))) then v110=0;v111=nil;v109=2 -1;end if (v109~=(682 -(221 + 459))) then else while true do if (v110~=0) then else v111=0 + 0;v112=nil;v110=1;end if (v110~=(1009 -(251 + 757))) then else v113=nil;while true do if (v111==1) then while true do if (v112~=0) then else v113=v22();if (v21(v113,1,1)~=(0 + 0)) then else local v199=0;local v200;local v201;local v202;local v203;local v204;while true do if (v199~=2) then else v204=nil;while true do if (v200==(1 + 1)) then while true do if (v201==2) then local v236=1925 -(691 + 1234);local v237;while true do if (v236==0) then v237=0;while true do if (1~=v237) then else v201=6 -3;break;end if (v237==(1458 -(537 + 921))) then local v259=0;while true do if (v259~=(0 + 0)) then else if (v21(v203,1,1)~=(2 -1)) then else v204[1567 -(62 + 1503)]=v49[v204[2]];end if (v21(v203,2,1149 -(763 + 384))~=(1806 -(1138 + 667))) then else v204[13 -10]=v49[v204[3]];end v259=3 -2;end if (v259~=1) then else v237=1;break;end end end end break;end end end if ((3 + 0)==v201) then if (v21(v203,3,10 -7)~=1) then else v204[1825 -(1605 + 216)]=v49[v204[4]];end v44[v108]=v204;break;end if (v201~=(0 + 0)) then else local v239=0 -0;local v240;while true do if (v239~=0) then else v240=0;while true do if (v240~=(3 -2)) then else v201=2 -1;break;end if (v240~=0) then else local v260=1594 -(1412 + 182);while true do if (v260~=(2 -1)) then else v240=1;break;end if (v260~=0) then else v202=v21(v113,2,3);v203=v21(v113,4,6);v260=1 -0;end end end end break;end end end if (v201==(1 -0)) then local v241=0 + 0;local v242;while true do if (v241~=(783 -(275 + 508))) then else v242=0;while true do if (v242~=0) then else local v261=0 + 0;while true do if (v261==(1621 -(232 + 1389))) then v204={v23(),v23(),nil,nil};if (v202==(0 -0)) then local v268=0;while true do if (v268~=0) then else v204[2 + 1]=v23();v204[3 + 1]=v23();break;end end elseif (v202==(1 + 0)) then v204[584 -(347 + 234)]=v24();elseif (v202==2) then v204[7 -4]=v24() -((1 + 1)^16);elseif (v202~=(1 + 2)) then else local v274=0;local v275;local v276;while true do if (v274==(0 -0)) then v275=0;v276=nil;v274=1239 -(266 + 972);end if (v274~=(1 + 0)) then else while true do if (v275~=0) then else v276=1837 -(1663 + 174);while true do if (v276~=0) then else v204[3]=v24() -((5 -3)^16);v204[4]=v23();break;end end break;end end break;end end end v261=1;end if (v261==1) then v242=691 -(135 + 555);break;end end end if (v242==1) then v201=2;break;end end break;end end end end break;end if (v200~=1) then else local v228=0 + 0;while true do if (v228==1) then v200=2;break;end if (v228==0) then v203=nil;v204=nil;v228=1;end end end if (v200~=0) then else local v229=0;while true do if (v229==(3 -2)) then v200=1 -0;break;end if (v229~=0) then else v201=1479 -(821 + 658);v202=nil;v229=1;end end end end break;end if (v199~=(0 -0)) then else v200=0 -0;v201=nil;v199=1 + 0;end if (v199~=(2 -1)) then else local v217=0 + 0;while true do if (v217~=(724 -(354 + 370))) then else v202=nil;v203=nil;v217=1;end if (1==v217) then v199=2;break;end end end end end break;end end break;end if (v111==0) then v112=0;v113=nil;v111=3 -2;end end break;end end break;end if ((2 -1)==v109) then v112=nil;v113=nil;v109=2;end end end for v114=142 -(84 + 57),v24() do v45[v114-1]=v29();end v97=1 + 0;end if (v97==(1 -0)) then local v107=0;while true do if (v107==(0 -0)) then for v117=1,v24() do v46[v117]=v24();end return v47;end end end break;end end end end break;end if (v88==(0 + 0)) then if ((0 -0)==v43) then v44={};v45={};v46={};v47={v44,v45,nil,v46};v43=1 + 0;end if ((2 -1)~=v43) then else v48=v24();v49={};for v100=1 + 0,v48 do local v101=0 + 0;local v102;local v103;local v104;while true do if ((0 -0)~=v101) then else v102=0;v103=nil;v101=825 -(485 + 339);end if (v101~=1) then else v104=nil;while true do if (v102~=1) then else if (v103==1) then v104=v22()~=0;elseif (v103==2) then v104=v25();elseif (v103~=(13 -10)) then else v104=v26();end v49[v100]=v104;break;end if (v102~=(0 + 0)) then else v103=v22();v104=nil;v102=1;end end break;end end end v47[3]=v22();v43=2;end v88=1 -0;end end end break;end if (v42==(4 -2)) then v47=nil;v48=nil;v42=3;end end end v18=5;end if (v18==1) then function v21(v34,v35,v36)if v36 then local v69=(v34/((762 -(462 + 298))^(v35-(523 -((763 -506) + 265)))))%((1913 -(887 + 1024))^(((v36-1) -(v35-(1 + 0))) + (2 -1)));return v69-(v69%((36 -(12 + 22)) -1));else local v70=(33 -(26 + 5))^(v35-(1 -0));return (((v34%(v70 + v70))>=v70) and (2 -1)) or (0 -0);end end v22=nil;function v22()local v50=v2(v16,v19,v19);v19=v19 + 1;return v50;end v23=nil;v18=2;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v37)if (v2(v37,2)==79) then local v71=0;while true do if (v71==0) then v20=v1(v4(v37,1,1));return "";end end else local v72=0;local v73;while true do if (v72==0) then v73=v3(v1(v37,16));if v20 then local v95=0;local v96;while true do if (v95==0) then v96=v6(v73,v20);v20=nil;v95=1;end if (v95==1) then return v96;end end else return v73;end break;end end end end);v21=nil;v18=1;end if (v18==3) then function v25()local v51=1968 -(1051 + (1777 -(560 + 300)));local v52;local v53;while true do if (v51==(0 + 0)) then v52=v24();v53=v24();v51=1 + 0;end if (v51==(1028 -(517 + 510))) then return (( -(2 + 0) * v21(v53,1927 -(154 + 1741))) + (1 -0)) * ((1 + 1)^(v21(v53,21,154 -123) -(587 + 436))) * ((((v21(v53,1 + 0,7 + 7 + 6) * (((27 -18) -7)^(1401 -(904 + 465)))) + v52)/((1 + 1)^(149 -97))) + (1485 -(1261 + 223)));end end end v26=nil;function v26(v38)local v54;if  not v38 then local v74=0;while true do if ((1833 -(66 + 1767))==v74) then v38=v24();if (v38==(725 -(470 + 255))) then return "";end break;end end end v54=v4(v16,v19,(v19 + v38) -(1025 -(781 + (856 -613))));v19=v19 + v38;local v55={};for v62=1 + 0, #v54 do v55[v62]=v3(v2(v4(v54,v62,v62)));end return v7(v55);end v27=v24;v18=4;end if (v18==2) then function v23()local v56,v57=v2(v16,v19,v19 + (247 -(42 + 203)));v19=v19 + (7 -5);return (v57 * (568 -312)) + v56;end v24=nil;function v24()local v58,v59,v60,v61=v2(v16,v19,v19 + 2 + 1);v19=v19 + 4;return (v61 * (38143853 -21366637)) + (v60 * (58340 + 7196)) + (v59 * (598 -342)) + v58;end v25=nil;v18=3;end end end v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==4) then vv9());break;end end end
